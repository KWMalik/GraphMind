<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" 
	layout="absolute"
	initialize="{onInitialize();}"
	applicationComplete="{onApplicationComplete();}"
	backgroundColor="#FFFFFF"
	color="#333333" 
	xmlns:components="components.*">
	
	<!-- Main style for the stage -->
	<mx:Style source="style/stage.css" />
		
	<mx:Script>
		<![CDATA[
			import com.graphmind.PluginManager;
			import nl.demonsters.debugger.MonsterDebugger;
			
			import mx.managers.SystemManager;
			import mx.states.State;
			import mx.effects.easing.Linear;
			
			import com.graphmind.net.UniqueItemLoader;
			import com.graphmind.net.SiteConnection;
			import com.graphmind.util.Log;
			import com.graphmind.ViewsManager;
			import com.graphmind.data.ViewsCollection;
			import com.graphmind.StageManager;
			import com.graphmind.GraphMindManager;
			
			public static var instance:GraphMind;
			
			[Embed(source='assets/images/draganddrop.png')]
			[Bindable]
			private var image_dragAndDrop:Class;
		
			[Bindable]
			public static var icons:Array = [
				"Mail", "yes", "help", "stop", "prepare",  "go",
				"down", "forward", "back", "up", 
				"full-0", "full-1", "full-2", "full-3", "full-4", "full-5", "full-6", "full-7", "full-8", "full-9", 
				"ksmiletris", "smiley-angry", "smily_bad", "smiley-neutral", "smiley-oh", 
				"female1", "female2", "male1", "male2", 
				"kmail", "broken-line", "button_cancel", "button_ok", 
				"flag-black",  "flag-orange", "flag", "flag-yellow", "flag-blue", "flag-green", "flag-pink",
				"password", "attach", "edit", 
				"freemind_butterfly", "hourglass", "pencil", "encrypted", 
				"idea", "penguin", "bell", "family", "info", 
				"bookmark", "fema", "kaddressbook", "redo", 
				"korn", "calendar", "knotify", 
				"clanbomber", "launch", "stop-sign", 
				"clock", "licq", "clock2", 
				"list", "closed", "wizard", 
				"decrypted", "gohome", "xmag", "desktop_new", "folder", 
				"group", "messagebox_warning"
			];
			
			
			/**
			 * Callback for initialize event.
			 */
			private function onInitialize():void {
				Log.debug('Graphmind initialize.');
				
				// Bind the only one instance to a public static var
				GraphMind.instance = this;
			}
			
			
			/**
			 * Triggered event when the application is ready.
			 */
			private function onApplicationComplete():void {
				//var md:MonsterDebugger = new MonsterDebugger(this);
				Log.debug('Grapmind started.');
				
				// Init managers
				StageManager.getInstance().init();
				GraphMindManager.getInstance().init();
				PluginManager.init();
			}
			
		]]>
	</mx:Script>
	
	<!-- View states -->
	<mx:states>
		<!-- Load views state --> 
		<mx:State name="load_view_state">
			<mx:SetProperty name="visible" target="{mainHBox}" value="false"/>
			<mx:AddChild position="lastChild" creationPolicy="all">
				<components:ViewLoadPanel id="panelLoadView"/>
			</mx:AddChild>
		</mx:State>
		<!-- Load single Drupal item state -->
		<mx:State name="load_item_state">
			<mx:SetProperty name="visible" target="{mainHBox}" value="false"/>
			<mx:AddChild position="lastChild" creationPolicy="all">
				<components:DrupalItemLoadPanel id="panelLoadDrupalItem"/>
			</mx:AddChild>
		</mx:State>
		<!-- Read-only mode state -->
		<mx:State name="only_view_mode">
			<mx:SetProperty name="visible" target="{mindmapToolsPanel.panelMain}" value="false"/>
			<mx:SetProperty name="visible" target="{mindmapCanvas.saveLinkButton}" value="false"/>
			<mx:SetProperty name="visible" target="{mindmapToolsPanel.icon_outer_container}" value="false"/>
			<mx:SetStyle target="{mindmapCanvas.desktop_wrapper}" name="left" value="10"/>
			<mx:SetStyle target="{mindmapCanvas.desktop_wrapper}" name="right" value="10"/>
			<mx:SetStyle target="{mindmapCanvas.fullScreenLinkButton}" name="left" value="10"/>
			<mx:SetStyle target="{mindmapCanvas.desktopScaleHSlider}" name="left" value="96"/>
			<mx:SetStyle target="{mindmapCanvas.desktopScaleLabel}" name="left" value="256"/>
		</mx:State>
	</mx:states>

	<!-- Debug textarea -->
	<!--
	<mx:TextArea right="10" bottom="40" top="10" width="200" id="debugTextarea" 
		backgroundAlpha="0"
		borderThickness="0"
		color="#FFFFFF"/>
	-->
	<!-- END Debug textarea -->

	<!-- Image for imitating drag-and-drop -->
	<mx:Image source="{image_dragAndDrop}" visible="false" id="dragAndDrop_shape" mouseUp="{StageManager.getInstance().onMouseUp_DragAndDropImage();}"/>
	
	<!-- Main mindmap area -->
	<mx:HDividedBox width="100%" height="100%" id="mainHBox">
		<components:MindmapToolsPanel id="mindmapToolsPanel"/>
		<components:MindmapCanvas id="mindmapCanvas"/>
	</mx:HDividedBox>
		
</mx:Application>
