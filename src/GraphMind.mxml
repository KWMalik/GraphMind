<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" 
	layout="absolute"
	initialize="{onInitialize();}"
	applicationComplete="{onApplicationComplete();}"
	backgroundColor="#FFFFFF"
	color="#333333" 
	xmlns:components="components.*">
	
	<!-- Main style for the stage -->
	<mx:Style source="style/stage.css" />
	
	<mx:Metadata>
	  [Event(name="mindmapCreationComplete", type="com.graphmind.event.MapEvent")]
	</mx:Metadata>
		
	<mx:Script>
		<![CDATA[
		  import com.graphmind.TreeWorkflow;
		  import com.graphmind.FuturesWheelWorkflow;
		  import com.graphmind.IWorkflowComposite;
		  import com.graphmind.display.NodeViewController;
		  import com.graphmind.view.FuturesWheelDrawer;
			import com.graphmind.TreeMapViewController;
			import com.graphmind.view.NodeView;
			import com.graphmind.view.TreeDrawer;
			import com.graphmind.util.OSD;
			import com.graphmind.PluginManager;
			import nl.demonsters.debugger.MonsterDebugger;
			
			import mx.managers.SystemManager;
			import mx.states.State;
			import mx.effects.easing.Linear;
			
			import com.graphmind.net.UniqueItemLoader;
			import com.graphmind.net.SiteConnection;
			import com.graphmind.util.Log;
			import com.graphmind.data.ViewsCollection;
			import com.graphmind.ApplicationController;
			
			// 'Singleton' instance.
			[Bindable] public static var i:GraphMind;
			
			/**
			 * Hook: fired when the application is being initialized.
			 */
			public static var HOOK_PRE_INIT:String = 'pre_init';
			
			/**
			 * Application manager.
			 */
			[Bindable] public var applicationController:ApplicationController;
			
			/**
			 * Callback for initialize event.
			 */
			private function onInitialize():void {
				Log.debug('Graphmind initialize.');
				
				// Bind the only one instance to a public static var
				GraphMind.i = this;
			}
			
			/**
			 * Triggered event when the application is ready.
			 */
			private function onApplicationComplete():void {
//				var md:MonsterDebugger = new MonsterDebugger(this);
				
				Log.info('Grapmind started.');
				
				// Init managers
				OSD.init(OSDContainer, 300);
				
        // Plugins should be the first
        PluginManager.init();
				// @HOOK
				PluginManager.callHook(HOOK_PRE_INIT);
        
				this.applicationController = new ApplicationController();
				
				OSD.show('Graphmind started.');
			}
			
		]]>
	</mx:Script>
	
	<!-- View states -->
	<mx:states>
		<!-- Load views state --> 
		<mx:State name="load_view_state">
			<mx:SetProperty name="visible" target="{mainHBox}" value="false"/>
			<mx:AddChild position="lastChild" creationPolicy="all">
				<components:ViewLoadPanel id="panelLoadView"/>
			</mx:AddChild>
		</mx:State>
		<!-- Load single Drupal item state -->
		<mx:State name="load_item_state">
			<mx:SetProperty name="visible" target="{mainHBox}" value="false"/>
			<mx:AddChild position="lastChild" creationPolicy="all">
				<components:DrupalItemLoadPanel id="panelLoadDrupalItem"/>
			</mx:AddChild>
		</mx:State>
		<!-- Read-only mode state -->
		<mx:State name="only_view_mode">
			<mx:RemoveChild target="{mindmapToolsPanel}" />
			<mx:RemoveChild target="{mindmapCanvas.saveLinkButton}" />
			<mx:SetProperty name="visible" target="{mindmapCanvas.saveLinkButton}" value="false"/>
			<mx:SetProperty name="visible" target="{mindmapToolsPanel.icon_outer_container}" value="false"/>
		</mx:State>
	</mx:states>

	<!-- Main mindmap area -->
	<mx:HDividedBox width="100%" height="100%" id="mainHBox">
		<components:MindmapToolsPanel id="mindmapToolsPanel"/>
		<mx:Box id="map" width="100%" height="100%"/>
	</mx:HDividedBox>
	
	<mx:VBox id="OSDContainer" width="300" height="100%" right="6" top="6"/>
		
</mx:Application>
